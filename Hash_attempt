#include<stdio.h> 
#include<stdlib.h> 
#include<string.h> 
 
struct DataItem { 
        int data; 
        int key; 
	struct DataItem * next;

}; 
  int hashCode(int key, int size) { 

	key= key % size;
      return key; 
  }
struct DataItem * init_table (int size){
	
	struct DataItem * aux;


	struct DataItem * head = (struct DataItem*) malloc(sizeof(struct DataItem));
	aux= head;

	aux->key = -100;	
	aux->data= 0;	
	for(int i=1; i<size;i++){
	struct DataItem *item =(struct DataItem*) malloc(sizeof(struct DataItem));
	item->next =NULL;
	aux->next= item;
	aux = item;
	aux->key= -100;
		}

return head;
		
}

struct DataItem * insert(struct DataItem * table, int key, int data, int size, int *a) {
		struct DataItem * aux = table;
		struct DataItem *auxcoll = table;
		int hashed = hashCode(key,size);
	
	int o= 0;

for(o;o<size;o++){
		if (hashed == o) {
			if (aux->key == -100) {
				aux->key = key;
				aux->data = data;
				*a++;
			//	printf("Entramos raza \n");
				break;
			}	
			else {
				printf("colison\n");
				if (*a== size){
					printf("La Tabla esta llena");	
					break;}
				int b=*a;	
			       	while (*a==b){
			 	if(auxcoll->key == -100){
				auxcoll->key= key;
				auxcoll->data= data;
				b++;
				
				}
			
					auxcoll= auxcoll->next;
				}
			break;						
			}

       		}

	aux= aux->next;	
}

//prinntf("%d, %d \n", aux->key, aux->data);	

	return table;

}

void display(struct DataItem * table, int size) {
struct DataItem * aux= table;

	for(int v=0; v<size;v++){
		printf("%d, %d \n",aux->key, aux->data);
					aux= aux->next;
}
} 

struct DataItem * search(struct DataItem *table,int key,int size) { 
	int hashed = hashCode(key,size);
	struct DataItem * auxcoll = table;
	struct DataItem * aux=table;
	int o= 0;

for(o;o<size;o++){
		if (hashed == o) {
			if (aux->key != -100) {
				if (aux->key == key){
				return aux;
				}
				else {
				struct DataItem * aux= table;

					for(int v=0; v<size;v++){
					if (auxcoll->key == key){
					return aux;	
					}
					}
				
				
				}	
			}	
			else {
				
			//	printf("No existe\n");									
				return NULL;
			}

       		}

	aux= aux->next;	
}
  return NULL;
}
 
void delete(struct DataItem* table,int key,int size ) { 
  
    struct DataItem *aux= search(table,key,size);
 if(aux == NULL){
 printf("No fue posible borrar el dato, no existe\n");
 }
 else {
	aux->data = 0;
   	aux->key= -100; 
 }	
} 


int main () { 
	int a=0;
  struct DataItem *table =NULL;	
	int size= 10;

	printf("Inserte el tamaÃ±o de la tabla\n");
	scanf("%d",&size);
table = init_table(size);
table = insert(table,4,6,size,&a);
table = insert(table,17,7,size,&a);
table = insert(table,2,3,size,&a);
table = insert(table,1,9,size,&a);
table = insert(table,3,8,size,&a);
table = insert(table,5,2,size,&a);
table = insert(table,6,89,size,&a);
table = insert(table,7,65,size,&a);
//table = insert(table,8,3234,size,&a);
table = insert(table,9,491,size,&a);
//table = insert(table,0,865,size,&a);

display(table,size);

struct DataItem * searched =search(table,80,size);
if (searched != NULL){
printf("\n %d \n",searched->data);
}
else {
printf("Dato no encontrado \n");
}
delete(table,55,size);

display(table,size);
}
  
